// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paraglider.DAL;

namespace Paraglider.DAL.Migrations
{
    [DbContext(typeof(ParagliderContext))]
    [Migration("20200211153014_ModelingDB")]
    partial class ModelingDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Paraglider.DAL.Models.Membership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("MembershipAmount")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("MembershipId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("Paraglider.DAL.Models.Pilot", b =>
                {
                    b.Property<int>("PilotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("PilotId");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("Paraglider.DAL.Models.PilotMembership", b =>
                {
                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPay")
                        .HasColumnType("datetime2");

                    b.HasKey("PilotId", "MembershipId");

                    b.HasIndex("MembershipId");

                    b.ToTable("PilotMemberships");
                });

            modelBuilder.Entity("Paraglider.DAL.Models.PilotTraineeship", b =>
                {
                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeshipId")
                        .HasColumnType("int");

                    b.Property<bool>("FollowExam")
                        .HasColumnType("bit");

                    b.HasKey("PilotId", "TraineeshipId");

                    b.HasIndex("TraineeshipId");

                    b.ToTable("PilotTraineeship");
                });

            modelBuilder.Entity("Paraglider.DAL.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.HasIndex("PilotId")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Paraglider.DAL.Models.Traineeship", b =>
                {
                    b.Property<int>("TraineeshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Prize")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("TraineeshipId");

                    b.ToTable("Traineeship");
                });

            modelBuilder.Entity("Paraglider.DAL.Models.PilotMembership", b =>
                {
                    b.HasOne("Paraglider.DAL.Models.Membership", "Membership")
                        .WithMany("PilotMemberships")
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Paraglider.DAL.Models.Pilot", "Pilot")
                        .WithMany("PilotMemberships")
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Paraglider.DAL.Models.PilotTraineeship", b =>
                {
                    b.HasOne("Paraglider.DAL.Models.Pilot", "Pilot")
                        .WithMany("PilotTraineeships")
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paraglider.DAL.Models.Traineeship", "Traineeship")
                        .WithMany("PilotTraineeships")
                        .HasForeignKey("TraineeshipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Paraglider.DAL.Models.Role", b =>
                {
                    b.HasOne("Paraglider.DAL.Models.Pilot", "Pilot")
                        .WithOne("Role")
                        .HasForeignKey("Paraglider.DAL.Models.Role", "PilotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
